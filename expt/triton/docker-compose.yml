version: '3.8'

services:
  triton:
    image: nvcr.io/nvidia/tritonserver:25.04-pyt-python-py3
    command: tritonserver --model-repository=/models --metrics-port=8080 --allow-metrics=true
    ports:
      - "8000:8000"  # HTTP inference endpoint
      - "8001:8001"  # gRPC inference endpoint
      - "8002:8002"  # HTTP metrics endpoint
      - "8080:8080"  # Prometheus metrics endpoint
    volumes:
      - ./models:/models
    shm_size: 1g
    ulimits:
      memlock: -1
      stack: 67108864

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - triton

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
